# pyproject.toml

[build-system]
requires = ["hatchling"] # Or setuptools, flit_core, etc.
build-backend = "hatchling.build"

[project]
name = "pollinator_abundance"
version = "0.1.0"
description = "A short description of your package."
readme = "README.md"
requires-python = ">=3.11"
authors = [
    { name = "Mara Fagaraz", email = "mara.fagaraz@gmail.com" },
]
classifiers = [ # Optional: PyPI classifiers
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

# Project dependencies
dependencies = [
    "annotated-types==0.7.0",
    "boto3==1.35.52",
    "botocore==1.35.54",
    "branca==0.8.1",
    "certifi==2024.12.14",
    "charset-normalizer==3.4.1",
    "folium==0.19.4",
    "fsspec==2024.12.0",
    "geographiclib==2.0",
    "geopy==2.4.1",
    "idna==3.10",
    "Jinja2==3.1.5",
    "jmespath==1.0.1",
    "MarkupSafe==3.0.2",
    "numpy==2.2.1",
    "pillow==10.4.0",
    "pip==24.3.1",
    "polars==1.19.0",
    "pydantic==2.9.2",
    "pydantic-settings==2.7.1",
    "pydantic_core==2.23.4",
    "PyMySQL==1.1.1",
    "python-dateutil==2.9.0.post0",
    "requests==2.32.3",
    "s3transfer==0.10.3",
    "setuptools==65.5.0",
    "shapely==2.0.6",
    "six==1.16.0",
    "tifffile==2025.1.10",
    "typing_extensions==4.12.2",
    "upolygon==0.1.11",
    "urllib3==2.3.0",
    "xyzservices==2024.9.0",
    "opencv-python>=4.11.0.86",
    "ruff>=0.11.6",
    "mypy>=1.15.0",
    "types-requests>=2.32.0.20250328",
    "pytest>=7.4.0",
    "fastapi>=0.110.0",
    "uvicorn>=0.29.0"
]


[tool.mypy]
python_version = "3.11" # Match your requires-python
warn_unused_configs = true
warn_return_any = true

[[tool.mypy.overrides]]
module = [
    "boto3.*",
    "botocore.*",
    "folium.*",
    "geopy.*",
    "PyMySQL.*",
    "cv2",
    "xyzservices.*",
    "PIL.*",
    "upolygon.*",
    "requests.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
# Logging configuration
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"